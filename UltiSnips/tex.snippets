global !p
import re
def strip_square_brackets(a):
	m = re.search('\[(.*)\]', a)
	if m:
		return m.group(1)
	else:
		return ''
def check(a, b):
	if b == "":
		return ""
	else:
		return a
endglobal

snippet "sc?o?p?e" "Scope environment" rb
\begin{scope}[$1]
	$0
\end{scope}
endsnippet

snippet "ti?k?z?" "Tikz environment" rb
\begin{tikzpicture}`!p snip.rv = check("[", t[1])`$1`!p snip.rv = check("]", t[1])`
	$0
\end{tikzpicture}
endsnippet

snippet "fi?g?u?r?e?" "Figure environment" rb
\begin{figure}[${1:htbp}]
	\centering
	$0
	\caption{$2}
	\label{fig:${3:${2/(\w+).*/\L$1\E/a}}}
\end{figure}
endsnippet

snippet "be?g?i?n?" "Begin a block" rb
\begin{${1:itemize}}`!p snip.rv = check("[", t[2])`$2`!p snip.rv = check("]", t[2])`
	$0
\end{$1}
endsnippet

snippet "glo?" "New glossary entry" rb
\newglossaryentry{${1:Reference name}}{
	name={${1/_/ /g}},
	description={${2:${VISUAL}}}
}
endsnippet
snippet "lgl?o?" "Long new glossary entry" rb
\longnewglossaryentry{${1:Reference name}}{name={$2}}{%
${0:${VISUAL}}}
endsnippet

snippet "no?t?bu?t?" "Not but" r
\notbut{${1:this}}{${0:that}}
endsnippet

snippet nor "Neither nor"
\neithernor{${1:this}}{${0:that}}
endsnippet

snippet eor "Either or"
\eitheror{${1:this}}{${0:that}}
endsnippet

snippet acr "Acronym" b
\newacronym{${1:Reference name}}{${1/([a-z])[a-z]+_?/\u$1/g}}{${1/([a-z]+)_|([a-z]+)/(?1:\u$1 )(?2:\u$2)/g}}
endsnippet

snippet "gls?" "Glossary lookup singular lowercase" r
\gls{$0}
endsnippet

snippet "glspl?" "Glossary lookup plural lowercase" r
\glspl{$0}
endsnippet

snippet "Gls?" "Glossary lookup singular uppercase" r
\Gls{$0}
endsnippet

snippet "Glspl?" "Glossary lookup plural uppercase" r
\Glspl{$0}
endsnippet

snippet "cre?f?" "cref" r
\cref{$0}
endsnippet

snippet "Cre?f?" "Cref" r
\Cr{$0}
endsnippet

snippet env "Newenvironment" b
\newenvironment{\\${1:Command name}}${2:[Argument count]}{${3:Begin block}}{${4:End block}}
endsnippet

snippet align "Math align" b
\begin{align}`!p snip.rv = check("[", t[1])`$1`!p snip.rv = check("]", t[1])`
	${0:${VISUAL}}
\end{align}
endsnippet

snippet "displ?a?y?" "Math display" rb
\begin{display}`!p snip.rv = check("[", t[1])`$1`!p snip.rv = check("]", t[1])`
	${0:${VISUAL}}
\end{display}
endsnippet

snippet "te?xt" "Math text" r
\text{${0:${VISUAL}}}
endsnippet

snippet emph "Emphasize"
\emph{${0:${VISUAL}}}
endsnippet

snippet "textit" "Italic"
\textit{${0:${VISUAL}}}
endsnippet

snippet "stro?n?g?" "Strong" r
\strong{${0:${VISUAL}}}
endsnippet

snippet end "End an environment" b
\end{$0}
endsnippet

snippet use "Use package"
\usepackage`!p snip.rv = check("[", t[1])`$1`!p snip.rv = check("]", t[1])`{$2}
endsnippet

snippet "capt?i?o?n?" "caption" rb
\caption{${0:${VISUAL}}}
endsnippet

snippet "abst?r?a?c?t?" "Abstract" rb
\begin{abstract}
	${0:${VISUAL}}
\end{abstract}
endsnippet

snippet toc "Table of Contents" b
\tableofcontents
endsnippet

snippet "tit?l?e?" "Title" rb
\maketitle
endsnippet
